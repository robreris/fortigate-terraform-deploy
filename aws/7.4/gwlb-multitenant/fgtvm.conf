Content-Type: multipart/mixed; boundary="==AWS=="
MIME-Version: 1.0
%{ if type == "byol" }
--==AWS==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="license"
${file(license_file)}
%{ endif }
--==AWS==
Content-Type: text/x-shellscript; charset="us-ascii"
MIME-Version: 1.0

config system global
set hostname FGTVM-GWLB
set admin-sport ${adminsport}
end
config system interface
edit port1
set alias public
set mode dhcp
set allowaccess ping https ssh fgfm
next
edit port2
set alias private
set mode dhcp
set allowaccess ping https ssh fgfm probe-response
set defaultgw disable
next
end
config system probe-response
set mode http-probe
end
config system global
set vdom-mode multi-vdom
end
config vdom
edit root
config system settings
    set vdom-type admin
end
next
edit FG-traffic
next
end
config global
config system interface
edit port2
set vdom FG-traffic
next
end
end
config vdom
edit FG-traffic
config system geneve
edit "awsgeneve"
set interface "port2"
set type ppp
set remote-ip ${endpointip}
next
end
config firewall policy
edit 1
set name "test"
set srcintf "awsgeneve"
set dstintf "awsgeneve"
set srcaddr "all"
set dstaddr "all"
set action accept
set schedule "always"
set service "ALL"
set logtraffic all
next
end
config router static
edit 1
set device awsgeneve
next
end
end
config vdom
edit FG-traffic2
config system geneve
edit "awsgeneve2"
set interface "port2"
set type ppp
set remote-ip ${endpointip}
next
end
config firewall policy
edit 1
set name "test"
set srcintf "awsgeneve2"
set dstintf "awsgeneve2"
set srcaddr "all"
set dstaddr "all"
set action accept
set schedule "always"
set service "ALL"
set logtraffic all
next
end
config router static
edit 1
set device awsgeneve2
next
end
end
config global
config aws vpce
edit 1
set name vpc1
set endpoint-id ${endpointid1}
set vdom FG-traffic
next
edit 2
set name vpc2
set endpoint-id ${endpointid2}
set vdom FG-traffic2
next
end

--==AWS==--
